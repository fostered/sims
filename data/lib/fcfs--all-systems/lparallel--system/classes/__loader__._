"; -*- Mode: Lisp -*-"
(SYSTEM:INIT-FASL :VERSION 42)
(SETQ SYSTEM:*SOURCE* #P"/home/vibhu/quicklisp/dists/quicklisp/software/lparallel-20131111-git/src/kernel/classes.lisp")
(SETQ SYSTEM::*FASL-UNINTERNED-SYMBOLS* #(#:%%%%.WORKER-INFO. #:G15310 #:G15311 #:G15312 #:G15358 #:G15403 #:G15455 #:G15500 #:G15552 #:G15598 #:WHOLE-15641 #:ENVIRONMENT-15642 #:LPARALLEL.KERNEL #:%%%%.WORKER-NOTIFICATIONS. #:G15658 #:G15659 #:G15660 #:G15702 #:G15747 #:G15799 #:G15843 #:G15895 #:G15940 #:WHOLE-15983 #:ENVIRONMENT-15984 #:LPARALLEL.KERNEL #:%%%%.WORKER. #:G16000 #:G16001 #:G16002 #:G16003 #:G16004 #:G16005 #:G16061 #:G16106 #:G16158 #:G16202 #:G16254 #:G16299 #:G16350 #:G16395 #:G16447 #:G16492 #:G16544 #:G16590 #:WHOLE-16634 #:ENVIRONMENT-16635 #:LPARALLEL.KERNEL #:G16659 #:G16660 #:G16689 #:G16690 #:G16719 #:G16720 #:G16746 #:G16747 #:G16748 #:G16791 #:G16837 #:G16889 #:G16933 #:G16985 #:G17031 #:%%%%.KERNEL. #:G17074 #:G17075 #:G17076 #:G17077 #:G17078 #:G17079 #:G17080 #:G17081 #:G17082 #:G17157 #:G17203 #:G17255 #:G17299 #:G17351 #:G17397 #:G17448 #:G17494 #:G17546 #:G17592 #:G17644 #:G17689 #:G17741 #:G17787 #:G17839 #:G17885 #:G17937 #:G17983 #:WHOLE-18027 #:ENVIRONMENT-18028 #:LPARALLEL.KERNEL #:G18052 #:G18053 #:G18082 #:G18083 #:G18112 #:G18113 #:G18142 #:G18143 #:%%%%.CHANNEL. #:G18164 #:G18165 #:G18206 #:G18252 #:G18304 #:G18349 #:WHOLE-18393 #:ENVIRONMENT-18394 #:LPARALLEL.KERNEL #:G18418 #:G18419 #:G18448 #:G18449 #:G18502 #:G18503 #:G18532 #:G18533))
(SETQ SYSTEM:*FASL-LOADER* (SYSTEM::MAKE-FASL-CLASS-LOADER "org.armedbear.lisp.classes_tmp7ZO4F1R0"))
(SYSTEM:%IN-PACKAGE "LPARALLEL.KERNEL")
(SYSTEM:COMPILER-DEFSTRUCT '#1=WORKER-INFO :CONC-NAME '#0? :DEFAULT-CONSTRUCTOR '#2=MAKE-WORKER-INFO-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-WORKER-INFO :PREDICATE '"WORKER-INFO-P" 
:DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=BINDINGS 0 %%%%.WORKER-INFO.BINDINGS
 (#7=ERROR #8="slot ~a in ~a not initialized" '#6#  '#1# ) LIST #3# ) #9=#(#5#  #10=CONTEXT
 1 %%%%.WORKER-INFO.CONTEXT (#7#  #8#  '#10#  '#1# ) FUNCTION #3# ) #11=#(#5#  #12=NAME
 2 %%%%.WORKER-INFO.NAME (#7#  #8#  '#12#  '#1# ) STRING #3# )) :SLOTS '(#4#  #9#  
#11# ) :INHERITED-ACCESSORS '#3#  :DOCUMENTATION '"Information common to all workers. See `make-kernel'.")
(SYSTEM:FSET 'MAKE-WORKER-INFO-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
0) 1674 '(&KEY ((:BINDINGS #1?) (#1=ERROR #2="slot ~a in ~a not initialized" 'BINDINGS 
'#3=WORKER-INFO)) ((:CONTEXT #2?) (#1#  #2#  'CONTEXT '#3# )) ((:NAME #3?) (#1#  
#2#  'NAME '#3# ))) #4=NIL)
(SYSTEM:FSET 'WORKER-INFO-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 1) 1674 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * LIST) %%%%.WORKER-INFO.BINDINGS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 2))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 3))
(SYSTEM:PUT '%%%%.WORKER-INFO.BINDINGS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'WORKER-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 5))
(PROCLAIM '(FTYPE (#1=FUNCTION * #1# ) %%%%.WORKER-INFO.CONTEXT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 7))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 8))
(SYSTEM:PUT '%%%%.WORKER-INFO.CONTEXT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'WORKER-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 10))
(PROCLAIM '(FTYPE (FUNCTION * STRING) %%%%.WORKER-INFO.NAME))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 12))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 13))
(SYSTEM:PUT '%%%%.WORKER-INFO.NAME 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'WORKER-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 15))
(SYSTEM::%SET-FDEFINITION 'COPY-WORKER-INFO (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-WORKER-INFO-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 17)) 1674 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(SYSTEM:COMPILER-DEFSTRUCT 'WORKER-NOTIFICATIONS :CONC-NAME '#13? :DEFAULT-CONSTRUCTOR 
'#1=MAKE-WORKER-NOTIFICATIONS-INSTANCE :CONSTRUCTORS '((#1#  #2=NIL)) :COPIER 'COPY-WORKER-NOTIFICATIONS 
:PREDICATE '"WORKER-NOTIFICATIONS-P" :DIRECT-SLOTS '(#3=#(#4=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 HANDSHAKE/FROM-WORKER 0 %%%%.WORKER-NOTIFICATIONS.HANDSHAKE/FROM-WORKER (#5=MAKE-QUEUE)
 #6=T #2# ) #7=#(#4#  HANDSHAKE/TO-WORKER 1 %%%%.WORKER-NOTIFICATIONS.HANDSHAKE/TO-WORKER
 (#5# ) #6#  #2# ) #8=#(#4#  EXIT-NOTIFICATION 2 %%%%.WORKER-NOTIFICATIONS.EXIT-NOTIFICATION
 (#5# ) #6#  #2# )) :SLOTS '(#3#  #7#  #8# ) :INHERITED-ACCESSORS '#2#  :DOCUMENTATION 
'"Communication with workers. A handshake takes place when a worker
   is created in order to verify its existence and to ensure all data
   is initialized. A worker sends a notification just before it exits.")
(SYSTEM:FSET 'MAKE-WORKER-NOTIFICATIONS-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
18) 1861 '(&KEY ((:HANDSHAKE/FROM-WORKER #14?) (#1=MAKE-QUEUE)) ((:HANDSHAKE/TO-WORKER 
#15?) (#1# )) ((:EXIT-NOTIFICATION #16?) (#1# ))) #2=NIL)
(SYSTEM:FSET 'WORKER-NOTIFICATIONS-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
19) 1861 '(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER-NOTIFICATIONS.HANDSHAKE/FROM-WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 20))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 21))
(SYSTEM:PUT '%%%%.WORKER-NOTIFICATIONS.HANDSHAKE/FROM-WORKER 'SYSTEM:SETF-FUNCTION 
(SYSTEM::MAKE-STRUCTURE-WRITER 0 'WORKER-NOTIFICATIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 23))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER-NOTIFICATIONS.HANDSHAKE/TO-WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 25))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 26))
(SYSTEM:PUT '%%%%.WORKER-NOTIFICATIONS.HANDSHAKE/TO-WORKER 'SYSTEM:SETF-FUNCTION 
(SYSTEM::MAKE-STRUCTURE-WRITER 1 'WORKER-NOTIFICATIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 28))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER-NOTIFICATIONS.EXIT-NOTIFICATION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 30))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 31))
(SYSTEM:PUT '%%%%.WORKER-NOTIFICATIONS.EXIT-NOTIFICATION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'WORKER-NOTIFICATIONS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 33))
(SYSTEM::%SET-FDEFINITION 'COPY-WORKER-NOTIFICATIONS (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-WORKER-NOTIFICATIONS-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 35)) 1861 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(SYSTEM:COMPILER-DEFSTRUCT '#1=WORKER :CONC-NAME '#26? :DEFAULT-CONSTRUCTOR '#2=MAKE-WORKER-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-WORKER :INCLUDE '(WORKER-NOTIFICATIONS) 
:PREDICATE '"WORKER-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #6=THREAD 3 %%%%.WORKER.THREAD (#7=ERROR #8="slot ~a in ~a not initialized" '#6#  
'#1# ) #9=T #3# ) #10=#(#5#  RUNNING-CATEGORY 4 %%%%.WORKER.RUNNING-CATEGORY #3# 
 #9#  #3# ) #11=#(#5#  #12=INDEX 5 %%%%.WORKER.INDEX (#7#  #8#  '#12#  '#1# ) #12# 
 #3# )) :SLOTS '(#(#5#  #13=HANDSHAKE/FROM-WORKER 0 %%%%.WORKER.HANDSHAKE/FROM-WORKER
 (#14=MAKE-QUEUE) #9#  #3# ) #(#5#  #15=HANDSHAKE/TO-WORKER 1 %%%%.WORKER.HANDSHAKE/TO-WORKER
 (#14# ) #9#  #3# ) #(#5#  #16=EXIT-NOTIFICATION 2 %%%%.WORKER.EXIT-NOTIFICATION (#14# )
 #9#  #3# ) #4#  #10#  #11# ) :INHERITED-ACCESSORS '((%%%%.WORKER-NOTIFICATIONS.EXIT-NOTIFICATION . #16# ) 
(%%%%.WORKER-NOTIFICATIONS.HANDSHAKE/TO-WORKER . #15# ) (%%%%.WORKER-NOTIFICATIONS.HANDSHAKE/FROM-WORKER . #13# )) 
:DOCUMENTATION '"A worker represents a thread dedicated to executing tasks. See
   `kill-tasks' for an explanation of `running-category'. `index' is
   the location of the worker in the kernel's vector of workers. When
   the stealing scheduler is enabled, each worker has its own lockless
   task queue.")
(SYSTEM:FSET 'MAKE-WORKER-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
36) 2279 '(&KEY ((:HANDSHAKE/FROM-WORKER #27?) (#1=MAKE-QUEUE)) ((:HANDSHAKE/TO-WORKER 
#28?) (#1# )) ((:EXIT-NOTIFICATION #29?) (#1# )) ((:THREAD #30?) (#2=ERROR #3="slot ~a in ~a not initialized" 
'THREAD '#4=WORKER)) ((:RUNNING-CATEGORY #31?) #5=NIL) ((:INDEX #32?) (#2#  #3#  
'INDEX '#4# ))) #5# )
(SYSTEM:FSET 'WORKER-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 37) 2279 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER.HANDSHAKE/FROM-WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 38))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 39))
(SYSTEM:PUT '%%%%.WORKER.HANDSHAKE/FROM-WORKER 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 41))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER.HANDSHAKE/TO-WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 43))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 44))
(SYSTEM:PUT '%%%%.WORKER.HANDSHAKE/TO-WORKER 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 46))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER.EXIT-NOTIFICATION))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 48))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 49))
(SYSTEM:PUT '%%%%.WORKER.EXIT-NOTIFICATION 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 51))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER.THREAD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 53))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 54))
(SYSTEM:PUT '%%%%.WORKER.THREAD 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 56))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.WORKER.RUNNING-CATEGORY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 58))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 59))
(SYSTEM:PUT '%%%%.WORKER.RUNNING-CATEGORY 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 61))
(PROCLAIM '(FTYPE (FUNCTION * INDEX) %%%%.WORKER.INDEX))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 63))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 64))
(SYSTEM:PUT '%%%%.WORKER.INDEX 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
5 'WORKER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 66))
(SYSTEM::%SET-FDEFINITION 'COPY-WORKER (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-WORKER-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 68)) 2279 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE &BODY 
LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (WORKER) T) THREAD))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 69))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 70))
(PROCLAIM '(FTYPE (FUNCTION (WORKER) T) RUNNING-CATEGORY))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 72))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 73))
(PROCLAIM '(FTYPE (FUNCTION (WORKER) INDEX) WORKER-INDEX))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 75))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 76))
(DEFTYPE SCHEDULER #1=NIL 'BIASED-QUEUE)
(SYSTEM:FSET 'TASKS (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 78) 2898 '(SCHEDULER) 
#1=NIL)
(SYSTEM:COMPILER-DEFSTRUCT 'LIMITER :CONC-NAME '#1=NIL :DEFAULT-CONSTRUCTOR 'MAKE-LIMITER 
:COPIER 'COPY-LIMITER :PREDICATE '"LIMITER-P" :DIRECT-SLOTS '(#2=#(#3=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION
 #4=LIMITER-ACCEPT-TASK-P 0 #4#  (#5=ERROR "no init") BOOLEAN #1# ) #6=#(#3#  #7=LIMITER-LOCK
 1 #7#  (#5#  "no init") T #1# ) #8=#(#3#  #9=LIMITER-COUNT 2 #9#  (#5#  "no init")
 FIXNUM #1# )) :SLOTS '(#2#  #6#  #8# ) :INHERITED-ACCESSORS '#1#  :DOCUMENTATION 
'#1# )
(SYSTEM:FSET 'MAKE-LIMITER (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 79) 4247 
'(&KEY ((:LIMITER-ACCEPT-TASK-P #54?) (#1=ERROR "no init")) ((:LIMITER-LOCK #55?) 
(#1#  "no init")) ((:LIMITER-COUNT #56?) (#1#  "no init"))) #2=NIL)
(SYSTEM:FSET 'LIMITER-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 80) 4247 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) LIMITER-ACCEPT-TASK-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 81))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 82))
(SYSTEM:PUT 'LIMITER-ACCEPT-TASK-P 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'LIMITER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 84))
(PROCLAIM '(FTYPE (FUNCTION * T) LIMITER-LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 86))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 87))
(SYSTEM:PUT 'LIMITER-LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 1 
'LIMITER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 89))
(PROCLAIM '(FTYPE (FUNCTION * FIXNUM) LIMITER-COUNT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 91))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 92))
(SYSTEM:PUT 'LIMITER-COUNT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 2 
'LIMITER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 94))
(SYSTEM::%SET-FDEFINITION 'COPY-LIMITER (FUNCTION COPY-STRUCTURE))
(SYSTEM:COMPILER-DEFSTRUCT '#1=KERNEL :CONC-NAME '#63? :DEFAULT-CONSTRUCTOR '#2=MAKE-KERNEL-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-KERNEL :INCLUDE '(LIMITER) :PREDICATE 
'"KERNEL-P" :DIRECT-SLOTS '(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=SCHEDULER
 3 %%%%.KERNEL.SCHEDULER (#7=ERROR #8="slot ~a in ~a not initialized" '#6#  '#1# )
 #6#  #3# ) #9=#(#5#  #10=WORKERS 4 %%%%.KERNEL.WORKERS (#7#  #8#  '#10#  '#1# ) SIMPLE-VECTOR
 #3# ) #11=#(#5#  #12=WORKERS-LOCK 5 %%%%.KERNEL.WORKERS-LOCK (#7#  #8#  '#12#  '#1# )
 #13=T #3# ) #14=#(#5#  #15=WORKER-INFO 6 %%%%.KERNEL.WORKER-INFO (#7#  #8#  '#15#  
'#1# ) #15#  #3# ) #16=#(#5#  #17=USE-CALLER-P 7 %%%%.KERNEL.USE-CALLER-P (#7#  #8#  
'#17#  '#1# ) #18=BOOLEAN #3# ) #19=#(#5#  #20=ALIVEP 8 %%%%.KERNEL.ALIVEP (#7#  
#8#  '#20#  '#1# ) #18#  #3# )) :SLOTS '(#(#5#  #21=LIMITER-ACCEPT-TASK-P 0 %%%%.KERNEL.LIMITER-ACCEPT-TASK-P
 (#7#  "no init") #18#  #3# ) #(#5#  #22=LIMITER-LOCK 1 %%%%.KERNEL.LIMITER-LOCK (#7#  
"no init") #13#  #3# ) #(#5#  #23=LIMITER-COUNT 2 %%%%.KERNEL.LIMITER-COUNT (#7#  
"no init") FIXNUM #3# ) #4#  #9#  #11#  #14#  #16#  #19# ) :INHERITED-ACCESSORS '((#23#  . #23# ) 
(#22#  . #22# ) (#21#  . #21# )) :DOCUMENTATION '"The kernel encompasses the scheduling and execution of parallel
   tasks using a pool of worker threads. All parallelism in lparallel
   is done on top of the kernel.")
(SYSTEM:FSET 'MAKE-KERNEL-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
96) 4748 '(&KEY ((:LIMITER-ACCEPT-TASK-P #64?) (#1=ERROR "no init")) ((:LIMITER-LOCK 
#65?) (#1#  "no init")) ((:LIMITER-COUNT #66?) (#1#  "no init")) ((:SCHEDULER #67?) 
(#1#  #2="slot ~a in ~a not initialized" 'SCHEDULER '#3=KERNEL)) ((:WORKERS #68?) 
(#1#  #2#  'WORKERS '#3# )) ((:WORKERS-LOCK #69?) (#1#  #2#  'WORKERS-LOCK '#3# )) 
((:WORKER-INFO #70?) (#1#  #2#  'WORKER-INFO '#3# )) ((:USE-CALLER-P #71?) (#1#  
#2#  'USE-CALLER-P '#3# )) ((:ALIVEP #72?) (#1#  #2#  'ALIVEP '#3# ))) #4=NIL)
(SYSTEM:FSET 'KERNEL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 97) 4748 '(SYSTEM::OBJECT) 
#1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) %%%%.KERNEL.LIMITER-ACCEPT-TASK-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 98))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 99))
(SYSTEM:PUT '%%%%.KERNEL.LIMITER-ACCEPT-TASK-P 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 101))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.KERNEL.LIMITER-LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 103))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 104))
(SYSTEM:PUT '%%%%.KERNEL.LIMITER-LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 106))
(PROCLAIM '(FTYPE (FUNCTION * FIXNUM) %%%%.KERNEL.LIMITER-COUNT))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 108))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 109))
(SYSTEM:PUT '%%%%.KERNEL.LIMITER-COUNT 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
2 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 111))
(PROCLAIM '(FTYPE (FUNCTION * SCHEDULER) %%%%.KERNEL.SCHEDULER))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 113))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 114))
(SYSTEM:PUT '%%%%.KERNEL.SCHEDULER 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
3 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 116))
(PROCLAIM '(FTYPE (FUNCTION * SIMPLE-VECTOR) %%%%.KERNEL.WORKERS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 118))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 119))
(SYSTEM:PUT '%%%%.KERNEL.WORKERS 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
4 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 121))
(PROCLAIM '(FTYPE (FUNCTION * T) %%%%.KERNEL.WORKERS-LOCK))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 123))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 124))
(SYSTEM:PUT '%%%%.KERNEL.WORKERS-LOCK 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
5 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 126))
(PROCLAIM '(FTYPE (FUNCTION * WORKER-INFO) %%%%.KERNEL.WORKER-INFO))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 128))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 129))
(SYSTEM:PUT '%%%%.KERNEL.WORKER-INFO 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
6 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 131))
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) %%%%.KERNEL.USE-CALLER-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 133))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 134))
(SYSTEM:PUT '%%%%.KERNEL.USE-CALLER-P 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
7 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 136))
(PROCLAIM '(FTYPE (FUNCTION * BOOLEAN) %%%%.KERNEL.ALIVEP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 138))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 139))
(SYSTEM:PUT '%%%%.KERNEL.ALIVEP 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
8 'KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 141))
(SYSTEM::%SET-FDEFINITION 'COPY-KERNEL (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-KERNEL-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 143)) 4748 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE 
&BODY LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (KERNEL) #1=SCHEDULER) #1# ))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 144))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 145))
(PROCLAIM '(FTYPE (FUNCTION (KERNEL) SIMPLE-VECTOR) WORKERS))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 147))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 148))
(PROCLAIM '(FTYPE (FUNCTION (KERNEL) BOOLEAN) USE-CALLER-P))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 150))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 151))
(PROCLAIM '(FTYPE (FUNCTION (KERNEL) BOOLEAN) ALIVEP))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 153))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 154))
(SYSTEM:COMPILER-DEFSTRUCT '#1=CHANNEL :CONC-NAME '#102? :DEFAULT-CONSTRUCTOR '#2=MAKE-CHANNEL-INSTANCE 
:CONSTRUCTORS '((#2#  #3=NIL)) :COPIER 'COPY-CHANNEL :PREDICATE '"CHANNEL-P" :DIRECT-SLOTS 
'(#4=#(#5=SYSTEM::DEFSTRUCT-SLOT-DESCRIPTION #6=QUEUE 0 %%%%.CHANNEL.QUEUE (#7=ERROR 
#8="slot ~a in ~a not initialized" '#6#  '#1# ) #6#  #3# ) #9=#(#5#  #10=KERNEL 1
 %%%%.CHANNEL.KERNEL (#7#  #8#  '#10#  '#1# ) #10#  #3# )) :SLOTS '(#4#  #9# ) :INHERITED-ACCESSORS 
'#3#  :DOCUMENTATION '"A task is submitted to the kernel using a channel. A channel
   always points to the same kernel, which is the value of `*kernel*'
   when the channel is created.")
(SYSTEM:FSET 'MAKE-CHANNEL-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
156) 5769 '(&KEY ((:QUEUE #103?) (#1=ERROR #2="slot ~a in ~a not initialized" 'QUEUE 
'#3=CHANNEL)) ((:KERNEL #104?) (#1#  #2#  'KERNEL '#3# ))) #4=NIL)
(SYSTEM:FSET 'CHANNEL-P (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 157) 5769 
'(SYSTEM::OBJECT) #1=NIL)
(PROCLAIM '(FTYPE (FUNCTION * QUEUE) %%%%.CHANNEL.QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 158))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 159))
(SYSTEM:PUT '%%%%.CHANNEL.QUEUE 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
0 'CHANNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 161))
(PROCLAIM '(FTYPE (FUNCTION * KERNEL) %%%%.CHANNEL.KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 163))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 164))
(SYSTEM:PUT '%%%%.CHANNEL.KERNEL 'SYSTEM:SETF-FUNCTION (SYSTEM::MAKE-STRUCTURE-WRITER 
1 'CHANNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 166))
(SYSTEM::%SET-FDEFINITION 'COPY-CHANNEL (FUNCTION COPY-STRUCTURE))
(SYSTEM:FSET '#1=WITH-CHANNEL-SLOTS (SYSTEM:MAKE-MACRO '#1#  (SYSTEM::GET-FASL-FUNCTION 
SYSTEM:*FASL-LOADER* 168)) 5769 '(LPARALLEL.UTIL::SLOTS LPARALLEL.UTIL::INSTANCE 
&BODY LPARALLEL.UTIL::BODY))
(PROCLAIM '(FTYPE (FUNCTION (CHANNEL) QUEUE) CHANNEL-QUEUE))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 169))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 170))
(PROCLAIM '(FTYPE (FUNCTION (CHANNEL) KERNEL) CHANNEL-KERNEL))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 172))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 173))
(DEFTYPE TASK #1=NIL '(CONS FUNCTION T))
(PROCLAIM '(INLINE MAKE-TASK-INSTANCE))
(PROCLAIM '(FTYPE (#1=FUNCTION (&KEY (:FN #1# ) (:CATEGORY T)) (VALUES TASK &OPTIONAL)) 
MAKE-TASK-INSTANCE))
(SETF (SYSTEM:INLINE-EXPANSION 'MAKE-TASK-INSTANCE) '#1=NIL)
(SYSTEM:FSET 'MAKE-TASK-INSTANCE (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 
175) 6075 '(&KEY (#1=FN (#2=ERROR #3="slot ~a in ~a not initialized" '#1#  '#4=TASK)) 
(#5=CATEGORY (#2#  #3#  '#5#  '#4# ))) #6=NIL)
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 176))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 177))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 179))
(FUNCALL (SYSTEM::GET-FASL-FUNCTION SYSTEM:*FASL-LOADER* 180))
